import { useMemo } from 'react';
import { cn } from '@/utils/cn';

interface InkGaugeProps {
  remainingPixels: number;
  maxPixels: number;
  className?: string;
}

const InkGauge = ({ remainingPixels, maxPixels, className }: InkGaugeProps) => {
  // 남은 잉크 비율 계산 (0-1 사이 값)
  // useMemo를 사용해 계산식 리렌더링 되지 않게 적용
  const ratio = useMemo(() => Math.max(0, Math.min(1, remainingPixels / maxPixels)), [remainingPixels, maxPixels]);

  return (
    <div className={cn('relative h-12 w-4 sm:h-14 sm:w-5 xl:h-16 xl:w-6 2xl:h-20 2xl:w-8', className)}>
      <svg
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 28 82"
        className="absolute inset-0 h-full w-full"
        aria-label={`잉크 잔량: ${Math.round(ratio * 100)}%`}
        fill="none"
      >
        {/* 내부 잉크량 표시 - clipPath 사용 */}
        <defs>
          <clipPath id="ink-level">
            <rect
              x="0"
              y={82 - 82 * ratio} // 아래에서부터 채우기
              width="28"
              height={82 * ratio}
            />
          </clipPath>
        </defs>

        {/* 잉크 채우기 */}
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M0 18.0001L10.0001 8.00005L8.00004 6.00004L14.0001 0L20.0001 6.00003L18.0001 8.00005L28.0002 18.0001L24.0001 22.0001L26.0001 24.0001L20.0001 30.0002L22.0001 32.0002L20.0001 34.0002L22.0001 36.0002L20.0001 38.0002L22.0001 40.0002L20.0001 42.0002L22.0001 44.0003L20.0001 46.0003L22.0001 48.0003L20.0001 50.0003L22.0001 52.0003L20.0001 54.0003L22.0001 56.0003L20.0001 58.0003L22.0001 60.0004L20.0001 62.0004L22.0001 64.0004L20.0001 66.0004L18.0001 68.0004L20.0001 70.0004L18.0001 72.0004L20.0001 74.0004L18.0001 76.0004L20.0001 78.0005L16.0001 82.0005L14.0001 80.0005L12.0001 82.0005L8.00004 78.0005L10.0001 76.0004L8.00005 74.0004L10.0001 72.0004L8.00004 70.0004L10.0001 68.0004L6.00003 64.0004L8.00004 62.0004L6.00003 60.0004L8.00005 58.0003L6.00003 56.0003L8.00004 54.0003L6.00003 52.0003L8.00004 50.0003L6.00003 48.0003L8.00004 46.0003L6.00003 44.0003L8.00004 42.0002L6.00003 40.0002L8.00004 38.0002L6.00003 36.0002L8.00004 34.0002L6.00003 32.0002L8.00004 30.0002L2.00001 24.0001L4.00002 22.0001L0 18.0001ZM13.9998 11.5002L7.49984 17.5002L13.9998 24.5002L20.4998 17.5002L13.9998 11.5002Z"
          className="fill-violet-900"
          clipPath="url(#ink-level)"
        />

        {/* 외곽선 */}
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M0 18.0001L10.0001 8.00005L8.00004 6.00004L14.0001 0L20.0001 6.00003L18.0001 8.00005L28.0002 18.0001L24.0001 22.0001L26.0001 24.0001L20.0001 30.0002L22.0001 32.0002L20.0001 34.0002L22.0001 36.0002L20.0001 38.0002L22.0001 40.0002L20.0001 42.0002L22.0001 44.0003L20.0001 46.0003L22.0001 48.0003L20.0001 50.0003L22.0001 52.0003L20.0001 54.0003L22.0001 56.0003L20.0001 58.0003L22.0001 60.0004L20.0001 62.0004L22.0001 64.0004L20.0001 66.0004L18.0001 68.0004L20.0001 70.0004L18.0001 72.0004L20.0001 74.0004L18.0001 76.0004L20.0001 78.0005L16.0001 82.0005L14.0001 80.0005L12.0001 82.0005L8.00004 78.0005L10.0001 76.0004L8.00005 74.0004L10.0001 72.0004L8.00004 70.0004L10.0001 68.0004L6.00003 64.0004L8.00004 62.0004L6.00003 60.0004L8.00005 58.0003L6.00003 56.0003L8.00004 54.0003L6.00003 52.0003L8.00004 50.0003L6.00003 48.0003L8.00004 46.0003L6.00003 44.0003L8.00004 42.0002L6.00003 40.0002L8.00004 38.0002L6.00003 36.0002L8.00004 34.0002L6.00003 32.0002L8.00004 30.0002L2.00001 24.0001L4.00002 22.0001L0 18.0001ZM13.9998 11.5002L7.49984 17.5002L13.9998 24.5002L20.4998 17.5002L13.9998 11.5002Z"
          className="stroke-violet-950 stroke-2"
        />
      </svg>
    </div>
  );
};

export { InkGauge };
