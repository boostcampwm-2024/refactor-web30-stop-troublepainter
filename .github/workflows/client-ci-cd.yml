name: Client CI/CD

on:
  push:
    branches: [main]
    paths:
      - 'client/**'
      - 'core/**'
      - 'nginx.conf'
      - 'default.conf'
      - '.github/workflows/client-ci-cd.yml'
      - 'Dockerfile.nginx'
      - 'docker-compose.yml'

jobs:
  ci-cd:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: '9'

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: Lint Client
        working-directory: ./client
        run: pnpm lint | true

      - name: Test Client
        working-directory: ./client
        run: pnpm test | true

      - name: Docker Setup
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.nginx
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/troublepainter-nginx:latest
          build-args: |
            VITE_API_URL=${{secrets.VITE_API_URL}}
            VITE_SOCKET_URL=${{secrets.VITE_SOCKET_URL}}

      - name: Deploy to Server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: mira
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /home/mira/refactor-web30-stop-troublepainter
            export DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }}
            export REDIS_HOST=${{ secrets.REDIS_HOST }}
            export REDIS_PORT=${{ secrets.REDIS_PORT }}
            export CLOVA_API_KEY=${{ secrets.CLOVA_API_KEY }}
            export CLOVA_GATEWAY_KEY=${{ secrets.CLOVA_GATEWAY_KEY }}
            export OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/troublepainter-nginx:latest
            docker compose up -d nginx